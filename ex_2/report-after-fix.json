{"errors": [{"code": 3, "level": "warn", "message": "Syntax error at line 4/example1.php:1:\n `\u201c` was unexpected", "path": "4/example1.php", "spans": [{"end": {"col": 17, "line": 1, "offset": 3}, "file": "4/example1.php", "start": {"col": 14, "line": 1, "offset": 0}}, {"end": {"col": 31, "line": 1, "offset": 4}, "file": "4/example1.php", "start": {"col": 27, "line": 1, "offset": 0}}, {"end": {"col": 40, "line": 1, "offset": 3}, "file": "4/example1.php", "start": {"col": 37, "line": 1, "offset": 0}}, {"end": {"col": 45, "line": 1, "offset": 3}, "file": "4/example1.php", "start": {"col": 42, "line": 1, "offset": 0}}], "type": ["PartialParsing", [{"end": {"col": 17, "line": 1, "offset": 3}, "path": "4/example1.php", "start": {"col": 14, "line": 1, "offset": 0}}, {"end": {"col": 31, "line": 1, "offset": 4}, "path": "4/example1.php", "start": {"col": 27, "line": 1, "offset": 0}}, {"end": {"col": 40, "line": 1, "offset": 3}, "path": "4/example1.php", "start": {"col": 37, "line": 1, "offset": 0}}, {"end": {"col": 45, "line": 1, "offset": 3}, "path": "4/example1.php", "start": {"col": 42, "line": 1, "offset": 0}}]]}], "interfile_languages_used": [], "paths": {"scanned": ["1/XmlReader_Tests.cs", "1/XmlReader_Tests.cs.old", "1/test.php", "1/test2.php", "1/xx.cs", "1/xx.js", "2/y.js", "3/Spring.java", "3/dom.php", "3/example.php", "3/example1.html", "3/express.js", "3/zz.cs", "4/aa.js", "4/example1.php", "4/koa.js"]}, "results": [{"check_id": "javascript.express.redos.express-redos.redos", "end": {"col": 38, "line": 8, "offset": 179}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "r", "location": {"end": {"col": 10, "line": 6, "offset": 122}, "path": "2/y.js", "start": {"col": 9, "line": 6, "offset": 121}}}], "taint_sink": ["CliLoc", [{"end": {"col": 38, "line": 8, "offset": 179}, "path": "2/y.js", "start": {"col": 17, "line": 8, "offset": 158}}, "r.test(req.params.id)"]], "taint_source": ["CliLoc", [{"end": {"col": 25, "line": 6, "offset": 137}, "path": "2/y.js", "start": {"col": 13, "line": 6, "offset": 125}}, "/([a-z]+)+$/"]]}, "engine_kind": "OSS", "fingerprint": "3b77d6ceba8ef087cb7a21bab00eeee9f17e71fb06594d3f48317be8cfbe390ee322b8c8081935685f17e780142904644a0ceb60c8b656929788327c97cb3a6b_0", "is_ignored": false, "lines": "    let match = r.test(req.params.id);", "message": "The regular expression identified appears vulnerable to Regular Expression Denial of Service (ReDoS) through catastrophic backtracking. If the input is attacker controllable, this vulnerability can lead to systems being non-responsive or may crash due to ReDoS. Where possible, re-write the regex so as not to leverage backtracking or use a library that offers default protection against ReDoS.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "functional-categories": ["regex::sink::regex", "web::source::cookie::express", "web::source::header::express", "web::source::http-body::express", "web::source::http-params::express", "web::source::url-path-params::express"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "references": ["https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html", "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS", "https://www.regular-expressions.info/catastrophic.html"], "semgrep.dev": {"rule": {"origin": "pro_rules", "rule_id": "JDUN3dD", "url": "https://semgrep.dev/playground/r/YDTNW45/javascript.express.redos.express-redos.redos", "version_id": "YDTNW45"}}, "shortlink": "https://sg.run/2ZLz5", "source": "https://semgrep.dev/r/javascript.express.redos.express-redos.redos", "subcategory": ["vuln"], "technology": ["express", "nodejs"], "vulnerability_class": ["Denial-of-Service (DoS)"]}, "metavars": {"$REQ": {"abstract_content": "req", "end": {"col": 27, "line": 8, "offset": 168}, "start": {"col": 24, "line": 8, "offset": 165}}, "$X": {"abstract_content": "([a-z]+)+$", "end": {"col": 24, "line": 6, "offset": 136}, "start": {"col": 14, "line": 6, "offset": 126}}, "$Y": {"abstract_content": "req.params.id", "end": {"col": 37, "line": 8, "offset": 178}, "start": {"col": 24, "line": 8, "offset": 165}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "2/y.js", "start": {"col": 17, "line": 8, "offset": 158}}, {"check_id": "javascript.express.security.audit.xss.direct-response-write.direct-response-write", "end": {"col": 19, "line": 9, "offset": 200}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "match", "location": {"end": {"col": 14, "line": 8, "offset": 155}, "path": "2/y.js", "start": {"col": 9, "line": 8, "offset": 150}}}], "taint_sink": ["CliLoc", [{"end": {"col": 19, "line": 9, "offset": 200}, "path": "2/y.js", "start": {"col": 14, "line": 9, "offset": 195}}, "match"]], "taint_source": ["CliLoc", [{"end": {"col": 34, "line": 8, "offset": 175}, "path": "2/y.js", "start": {"col": 24, "line": 8, "offset": 165}}, "req.params"]]}, "engine_kind": "OSS", "fingerprint": "52f3371c7b9ff66594e57c57695444efbfc53954891501690ce5a4543994c9f9a978e8836f0de5cffbc9cbcec6f71f71beb2b2d897619d4df4fbdc4ab93136a5_0", "is_ignored": false, "lines": "    res.send(match)", "message": "Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"], "semgrep.dev": {"rule": {"origin": "community", "rule_id": "3qUPA1", "url": "https://semgrep.dev/playground/r/rxTyLQd/javascript.express.security.audit.xss.direct-response-write.direct-response-write", "version_id": "rxTyLQd"}}, "shortlink": "https://sg.run/vzGl", "source": "https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write", "subcategory": ["vuln"], "technology": ["express"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "get", "end": {"col": 4, "line": 1, "offset": 3}, "start": {"col": 1, "line": 1, "offset": 0}}, "$APP": {"abstract_content": "router", "end": {"col": 7, "line": 5, "offset": 80}, "propagated_value": {"svalue_abstract_content": "express.Router()", "svalue_end": {"col": 32, "line": 2, "offset": 68}, "svalue_start": {"col": 16, "line": 2, "offset": 52}}, "start": {"col": 1, "line": 5, "offset": 74}}, "$ARG": {"abstract_content": "match", "end": {"col": 19, "line": 9, "offset": 200}, "propagated_value": {"svalue_abstract_content": "r.test(req.params.id)", "svalue_end": {"col": 38, "line": 8, "offset": 179}, "svalue_start": {"col": 17, "line": 8, "offset": 158}}, "start": {"col": 14, "line": 9, "offset": 195}}, "$METHOD": {"abstract_content": "get", "end": {"col": 11, "line": 5, "offset": 84}, "start": {"col": 8, "line": 5, "offset": 81}}, "$REQ": {"abstract_content": "req", "end": {"col": 27, "line": 8, "offset": 168}, "start": {"col": 24, "line": 8, "offset": 165}}, "$RES": {"abstract_content": "res", "end": {"col": 31, "line": 5, "offset": 104}, "start": {"col": 28, "line": 5, "offset": 101}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "2/y.js", "start": {"col": 14, "line": 9, "offset": 195}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 32, "line": 11, "offset": 211}, "extra": {"dataflow_trace": {"intermediate_vars": [], "taint_sink": ["CliLoc", [{"end": {"col": 32, "line": 11, "offset": 211}, "path": "3/dom.php", "start": {"col": 11, "line": 11, "offset": 190}}, "<?= $_GET['name']; ?>"]], "taint_source": ["CliLoc", [{"end": {"col": 28, "line": 11, "offset": 207}, "path": "3/dom.php", "start": {"col": 15, "line": 11, "offset": 194}}, "$_GET['name']"]]}, "engine_kind": "OSS", "fingerprint": "d563fff6e24f4b9ecdded812adf5a4025704d3ca96f0e0508b619d6638d51989ec8d6e7d79c6f9a78673fb81721a22d32ba585b9c1e65323ecc7feff2e21f2ab_0", "is_ignored": false, "lines": "      Hi, <?= $_GET['name']; ?>", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "rule_id": "r6UA0y", "url": "https://semgrep.dev/playground/r/1QTO714/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "1QTO714"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 20, "line": 11, "offset": 199}, "start": {"col": 15, "line": 11, "offset": 194}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "3/dom.php", "start": {"col": 11, "line": 11, "offset": 190}}, {"check_id": "php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "end": {"col": 31, "line": 7, "offset": 206}, "extra": {"dataflow_trace": {"intermediate_vars": [], "taint_sink": ["CliLoc", [{"end": {"col": 31, "line": 7, "offset": 206}, "path": "3/example.php", "start": {"col": 1, "line": 7, "offset": 176}}, "echo 'Hello, ' . $_GET['name']"]], "taint_source": ["CliLoc", [{"end": {"col": 31, "line": 7, "offset": 206}, "path": "3/example.php", "start": {"col": 18, "line": 7, "offset": 193}}, "$_GET['name']"]]}, "engine_kind": "OSS", "fingerprint": "90a9a9ab39d507cb60f605bd445106768efb57d8d4b1680dced743d104ca179067fdfa00ef9e037b40ea445f6d91c9dbc3a16fd4330092cb35c78b57718c4be7_0", "is_ignored": false, "lines": "echo 'Hello, ' . $_GET['name']", "message": "Found direct access to a PHP variable wihout HTML escaping inside an inline PHP statement setting data from `$_REQUEST[...]`. When untrusted input can be used to tamper with a web page rendering, it can lead to a Cross-site scripting (XSS) vulnerability. XSS vulnerabilities occur when untrusted input executes malicious JavaScript code, leading to issues such as account compromise and sensitive information leakage. To prevent this vulnerability, validate the user input, perform contextual output encoding or sanitize the input. In PHP you can encode or sanitize user input with `htmlspecialchars` or use automatic context-aware escaping with a template engine such as Latte.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "functional-categories": ["web::source::http-params::lang", "web::source::http-body::lang", "web::sink::html-webpage::lang"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://www.php.net/manual/en/language.basic-syntax.phptags.php"], "semgrep.dev": {"rule": {"origin": "pro_rules", "rule_id": "r6UA0y", "url": "https://semgrep.dev/playground/r/1QTO714/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "version_id": "1QTO714"}}, "shortlink": "https://sg.run/RlGe", "source": "https://semgrep.dev/r/php.lang.security.taint-unsafe-echo-tag.taint-unsafe-echo-tag", "subcategory": ["vuln"], "technology": ["php"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "GET", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 3, "line": 1, "offset": 2}}, "$REQ": {"abstract_content": "$_GET", "end": {"col": 23, "line": 7, "offset": 198}, "start": {"col": 18, "line": 7, "offset": 193}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "3/example.php", "start": {"col": 1, "line": 7, "offset": 176}}, {"check_id": "javascript.express.security.injection.raw-html-format.raw-html-format", "end": {"col": 34, "line": 6, "offset": 179}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "name", "location": {"end": {"col": 17, "line": 5, "offset": 128}, "path": "3/express.js", "start": {"col": 13, "line": 5, "offset": 124}}}], "taint_sink": ["CliLoc", [{"end": {"col": 34, "line": 6, "offset": 179}, "path": "3/express.js", "start": {"col": 14, "line": 6, "offset": 159}}, "'<h1> Hello :'+ name"]], "taint_source": ["CliLoc", [{"end": {"col": 32, "line": 5, "offset": 143}, "path": "3/express.js", "start": {"col": 23, "line": 5, "offset": 134}}, "req.query"]]}, "engine_kind": "OSS", "fingerprint": "4ccd51d6ad2a442ffa3b56c302cad1b5ece7cf3aaaf63525ce20aed61dd4a3247c3957315136be8fff50115c8f073f80c31c3de8db8d057996b79f2864266370_0", "is_ignored": false, "lines": "    res.send('<h1> Hello :'+ name +\"</h1>\")", "message": "User data flows into the host portion of this manually-constructed HTML. This can introduce a Cross-Site-Scripting (XSS) vulnerability if this comes from user-provided input. Consider using a sanitization library such as DOMPurify to sanitize the HTML within.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"], "semgrep.dev": {"rule": {"origin": "community", "rule_id": "5rUL0X", "url": "https://semgrep.dev/playground/r/BjTXr3r/javascript.express.security.injection.raw-html-format.raw-html-format", "version_id": "BjTXr3r"}}, "shortlink": "https://sg.run/5DO3", "source": "https://semgrep.dev/r/javascript.express.security.injection.raw-html-format.raw-html-format", "subcategory": ["vuln"], "technology": ["express"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "get", "end": {"col": 4, "line": 1, "offset": 3}, "start": {"col": 1, "line": 1, "offset": 0}}, "$APP": {"abstract_content": "router", "end": {"col": 7, "line": 4, "offset": 77}, "propagated_value": {"svalue_abstract_content": "express.Router()", "svalue_end": {"col": 32, "line": 2, "offset": 67}, "svalue_start": {"col": 16, "line": 2, "offset": 51}}, "start": {"col": 1, "line": 4, "offset": 71}}, "$EXPR": {"abstract_content": "name", "end": {"col": 34, "line": 6, "offset": 179}, "start": {"col": 30, "line": 6, "offset": 175}}, "$HTMLSTR": {"abstract_content": "<h1> Hello :", "end": {"col": 27, "line": 6, "offset": 172}, "start": {"col": 15, "line": 6, "offset": 160}}, "$METHOD": {"abstract_content": "get", "end": {"col": 11, "line": 4, "offset": 81}, "start": {"col": 8, "line": 4, "offset": 78}}, "$REQ": {"abstract_content": "req", "end": {"col": 26, "line": 5, "offset": 137}, "start": {"col": 23, "line": 5, "offset": 134}}, "$RES": {"abstract_content": "res", "end": {"col": 34, "line": 4, "offset": 104}, "start": {"col": 31, "line": 4, "offset": 101}}, "$TAG": {"abstract_content": "h1", "end": {"col": 18, "line": 6, "offset": 163}, "start": {"col": 16, "line": 6, "offset": 161}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "3/express.js", "start": {"col": 14, "line": 6, "offset": 159}}, {"check_id": "javascript.express.security.audit.xss.direct-response-write.direct-response-write", "end": {"col": 43, "line": 6, "offset": 188}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "name", "location": {"end": {"col": 17, "line": 5, "offset": 128}, "path": "3/express.js", "start": {"col": 13, "line": 5, "offset": 124}}}], "taint_sink": ["CliLoc", [{"end": {"col": 43, "line": 6, "offset": 188}, "path": "3/express.js", "start": {"col": 14, "line": 6, "offset": 159}}, "'<h1> Hello :'+ name +\"</h1>\""]], "taint_source": ["CliLoc", [{"end": {"col": 32, "line": 5, "offset": 143}, "path": "3/express.js", "start": {"col": 23, "line": 5, "offset": 134}}, "req.query"]]}, "engine_kind": "OSS", "fingerprint": "88cebb7fe43b03375683f87cc39b4e11d7bd5a0f47c84fd4ff743a99177be2084ac4d437ebe7867ccd363299ad9d24e4221010ba43e40acfdaeb69e1d8092371_0", "is_ignored": false, "lines": "    res.send('<h1> Hello :'+ name +\"</h1>\")", "message": "Detected directly writing to a Response object from user-defined input. This bypasses any HTML escaping and may expose your application to a Cross-Site-scripting (XSS) vulnerability. Instead, use 'resp.render()' to render safely escaped HTML.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"], "semgrep.dev": {"rule": {"origin": "community", "rule_id": "3qUPA1", "url": "https://semgrep.dev/playground/r/rxTyLQd/javascript.express.security.audit.xss.direct-response-write.direct-response-write", "version_id": "rxTyLQd"}}, "shortlink": "https://sg.run/vzGl", "source": "https://semgrep.dev/r/javascript.express.security.audit.xss.direct-response-write.direct-response-write", "subcategory": ["vuln"], "technology": ["express"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "get", "end": {"col": 4, "line": 1, "offset": 3}, "start": {"col": 1, "line": 1, "offset": 0}}, "$APP": {"abstract_content": "router", "end": {"col": 7, "line": 4, "offset": 77}, "propagated_value": {"svalue_abstract_content": "express.Router()", "svalue_end": {"col": 32, "line": 2, "offset": 67}, "svalue_start": {"col": 16, "line": 2, "offset": 51}}, "start": {"col": 1, "line": 4, "offset": 71}}, "$ARG": {"abstract_content": "'<h1> Hello :'+name+\"</h1>\"", "end": {"col": 43, "line": 6, "offset": 188}, "start": {"col": 14, "line": 6, "offset": 159}}, "$METHOD": {"abstract_content": "get", "end": {"col": 11, "line": 4, "offset": 81}, "start": {"col": 8, "line": 4, "offset": 78}}, "$REQ": {"abstract_content": "req", "end": {"col": 26, "line": 5, "offset": 137}, "start": {"col": 23, "line": 5, "offset": 134}}, "$RES": {"abstract_content": "res", "end": {"col": 34, "line": 4, "offset": 104}, "start": {"col": 31, "line": 4, "offset": 101}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "3/express.js", "start": {"col": 14, "line": 6, "offset": 159}}, {"check_id": "javascript.express.open-redirect-deepsemgrep.open-redirect-deepsemgrep", "end": {"col": 21, "line": 17, "offset": 459}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "url", "location": {"end": {"col": 12, "line": 16, "offset": 393}, "path": "4/aa.js", "start": {"col": 9, "line": 16, "offset": 390}}}], "taint_sink": ["CliLoc", [{"end": {"col": 21, "line": 17, "offset": 459}, "path": "4/aa.js", "start": {"col": 18, "line": 17, "offset": 456}}, "url"]], "taint_source": ["CliLoc", [{"end": {"col": 34, "line": 16, "offset": 415}, "path": "4/aa.js", "start": {"col": 25, "line": 16, "offset": 406}}, "req.query"]]}, "engine_kind": "OSS", "fingerprint": "e6f0d5e35f7cef909a606a6f0722c4a5a01aeadaad2f441e0873fdb323bc5282836a1f8c6082b02bb5e26dee8782dc8dfabf7444b5331ab2d80934cd12e68fb7_0", "is_ignored": false, "lines": "    res.redirect(url);", "message": "The application builds a URL using user-controlled input which can lead to an open redirect vulnerability. An attacker can manipulate the URL and redirect users to an arbitrary domain. Open redirect vulnerabilities can lead to issues such as Cross-site scripting (XSS) or redirecting to a malicious domain for activities such as phishing to capture users' credentials. To prevent this vulnerability perform strict input validation of the domain against an allowlist of approved domains. Notify a user in your application that they are leaving the website. Display a domain where they are redirected to the user. A user can then either accept or deny the redirect to an untrusted site.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"], "functional-categories": ["web::source::cookie::express", "web::source::http-params::express", "web::source::http-body::express", "web::source::header::express", "web::sink::redirect::express"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html"], "semgrep.dev": {"rule": {"origin": "pro_rules", "rule_id": "2ZUXkp", "url": "https://semgrep.dev/playground/r/9lTd52K/javascript.express.open-redirect-deepsemgrep.open-redirect-deepsemgrep", "version_id": "9lTd52K"}}, "shortlink": "https://sg.run/BDbW", "source": "https://semgrep.dev/r/javascript.express.open-redirect-deepsemgrep.open-redirect-deepsemgrep", "subcategory": ["vuln"], "technology": ["express"], "vulnerability_class": ["Open Redirect"]}, "metavars": {"$QUERY": {"abstract_content": "url", "end": {"col": 21, "line": 17, "offset": 459}, "propagated_value": {"svalue_abstract_content": "encodeURI(req.query.url)", "svalue_end": {"col": 39, "line": 16, "offset": 420}, "svalue_start": {"col": 15, "line": 16, "offset": 396}}, "start": {"col": 18, "line": 17, "offset": 456}}, "$REQ": {"abstract_content": "req", "end": {"col": 28, "line": 16, "offset": 409}, "start": {"col": 25, "line": 16, "offset": 406}}, "$RES": {"abstract_content": "res", "end": {"col": 8, "line": 17, "offset": 446}, "start": {"col": 5, "line": 17, "offset": 443}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "4/aa.js", "start": {"col": 18, "line": 17, "offset": 456}}, {"check_id": "javascript.express.open-redirect-deepsemgrep.open-redirect-deepsemgrep", "end": {"col": 18, "line": 8, "offset": 160}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "url", "location": {"end": {"col": 9, "line": 7, "offset": 121}, "path": "4/koa.js", "start": {"col": 6, "line": 7, "offset": 118}}}], "taint_sink": ["CliLoc", [{"end": {"col": 18, "line": 8, "offset": 160}, "path": "4/koa.js", "start": {"col": 15, "line": 8, "offset": 157}}, "url"]], "taint_source": ["CliLoc", [{"end": {"col": 21, "line": 7, "offset": 133}, "path": "4/koa.js", "start": {"col": 12, "line": 7, "offset": 124}}, "ctx.query"]]}, "engine_kind": "OSS", "fingerprint": "9f337a47179d9013d8341a9faf27868c7c4baab250d5fd314d6b33dda07646ce342b8c4d284101c2cff58589fa1d08da147d49f98c7cb42f7e4dbd212ca00b17_0", "is_ignored": false, "lines": "\tctx.redirect(url);", "message": "The application builds a URL using user-controlled input which can lead to an open redirect vulnerability. An attacker can manipulate the URL and redirect users to an arbitrary domain. Open redirect vulnerabilities can lead to issues such as Cross-site scripting (XSS) or redirecting to a malicious domain for activities such as phishing to capture users' credentials. To prevent this vulnerability perform strict input validation of the domain against an allowlist of approved domains. Notify a user in your application that they are leaving the website. Display a domain where they are redirected to the user. A user can then either accept or deny the redirect to an untrusted site.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"], "functional-categories": ["web::source::cookie::express", "web::source::http-params::express", "web::source::http-body::express", "web::source::header::express", "web::sink::redirect::express"], "impact": "MEDIUM", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html"], "semgrep.dev": {"rule": {"origin": "pro_rules", "rule_id": "2ZUXkp", "url": "https://semgrep.dev/playground/r/9lTd52K/javascript.express.open-redirect-deepsemgrep.open-redirect-deepsemgrep", "version_id": "9lTd52K"}}, "shortlink": "https://sg.run/BDbW", "source": "https://semgrep.dev/r/javascript.express.open-redirect-deepsemgrep.open-redirect-deepsemgrep", "subcategory": ["vuln"], "technology": ["express"], "vulnerability_class": ["Open Redirect"]}, "metavars": {"$QUERY": {"abstract_content": "url", "end": {"col": 18, "line": 8, "offset": 160}, "propagated_value": {"svalue_abstract_content": "ctx.query.target", "svalue_end": {"col": 28, "line": 7, "offset": 140}, "svalue_start": {"col": 12, "line": 7, "offset": 124}}, "start": {"col": 15, "line": 8, "offset": 157}}, "$REQ": {"abstract_content": "ctx", "end": {"col": 15, "line": 7, "offset": 127}, "start": {"col": 12, "line": 7, "offset": 124}}, "$RES": {"abstract_content": "ctx", "end": {"col": 5, "line": 8, "offset": 147}, "start": {"col": 2, "line": 8, "offset": 144}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "4/koa.js", "start": {"col": 15, "line": 8, "offset": 157}}], "skipped_rules": [], "version": "1.60.1"}